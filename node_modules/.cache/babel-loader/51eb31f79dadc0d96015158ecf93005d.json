{"ast":null,"code":"var _jsxFileName = \"/home/hadi/Desktop/avishkar_recruit/src/Login.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPass: \"\",\n      errors: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  hasError(key) {\n    return this.state.errors.indexOf(key) !== -1;\n  }\n\n  handleInputChange(event) {\n    var key = event.target.name;\n    var value = event.target.value;\n    var obj = {};\n    obj[key] = value;\n    this.setState(obj);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var errors = [];\n\n    if (this.state.userName.length > 8) {\n      errors.push(\"userName\");\n    }\n\n    const expression = /\\S+@\\S+/;\n    var validEmail = expression.test(String(this.state.email).toLowerCase());\n\n    if (!validEmail) {\n      errors.push(\"email\");\n    }\n\n    console.log(this.state.password.length >= 6);\n\n    if (this.state.password.trim().length > 6) {\n      errors.push(\"password\");\n    }\n\n    if (this.state.password !== this.state.confirmPass) {\n      errors.push(\"confirmPass\");\n    }\n\n    this.setState({\n      errors: errors\n    });\n\n    if (errors.length > 0) {\n      return false;\n    } else {\n      window.location = \"/content\";\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Avishkar-Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formGroupUserName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter User Name\",\n            className: this.hasError(\"userName\") ? \"form-control is-invalid\" : \"form-control\",\n            name: \"userName\",\n            value: this.state.userName,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: this.hasError(\"userName\") ? \"inline-errormsg\" : \"hidden\",\n            children: \"User Name should be atleast 8 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formGroupEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            className: this.hasError(\"email\") ? \"form-control is-invalid\" : \"form-control\",\n            name: \"email\",\n            value: this.state.email,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: this.hasError(\"email\") ? \"inline-errormsg\" : \"hidden\",\n            children: \"Email is invalid or missing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formGroupPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            className: this.hasError(\"password\") ? \"form-control is-invalid\" : \"form-control\",\n            name: \"password\",\n            value: this.state.password,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: this.hasError(\"password\") ? \"inline-errormsg\" : \"hidden\",\n            children: \"Password should be atleast 6 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formGroupConfirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            className: this.hasError(\"confirmPass\") ? \"form-control is-invalid\" : \"form-control\",\n            name: \"confirmPass\",\n            value: this.state.confirmPass,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: this.hasError(\"confirmPass\") ? \"inline-errormsg\" : \"hidden\",\n            children: \"Should match password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"d-grid\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            onClick: this.handleSubmit,\n            children: \"REGISTER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/hadi/Desktop/avishkar_recruit/src/Login.js"],"names":["React","Component","Form","Button","Login","constructor","props","state","userName","email","password","confirmPass","errors","handleInputChange","bind","handleSubmit","hasError","key","indexOf","event","target","name","value","obj","setState","preventDefault","length","push","expression","validEmail","test","String","toLowerCase","console","log","trim","window","location","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport {Form,Button} from 'react-bootstrap';\n\nclass Login extends Component{\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          userName: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPass: \"\",\n          errors: []\n        };\n    \n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    \n      hasError(key) {\n        return this.state.errors.indexOf(key) !== -1;\n      }\n    \n      handleInputChange(event) {\n        var key = event.target.name;\n        var value = event.target.value;\n        var obj = {};\n        obj[key] = value;\n        this.setState(obj);\n      }\n    \n      handleSubmit(event) {\n        event.preventDefault();   \n        var errors = [];\n  \n        if (this.state.userName.length>8) {\n            errors.push(\"userName\");\n          }\n    \n        const expression = /\\S+@\\S+/;\n        var validEmail = expression.test(String(this.state.email).toLowerCase());\n        if (!validEmail) {\n          errors.push(\"email\");\n        }\n        console.log(this.state.password.length>=6)\n        if (this.state.password.trim().length>6) {\n            errors.push(\"password\");\n        }\n\n        if (this.state.password !== this.state.confirmPass) {\n            errors.push(\"confirmPass\");\n          }\n\n        this.setState({\n          errors: errors\n        });\n    \n        if (errors.length > 0) {\n          return false;\n        } else {\n          window.location=\"/content\";\n        }\n      }\n    render(){\n        return(\n            <React.Fragment>\n                <Form className=\"form-div\">\n                <h3>Avishkar-Form</h3>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupUserName\">\n                        <Form.Label >User Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter User Name\" className={\n                            this.hasError(\"userName\")\n                                ? \"form-control is-invalid\"\n                                : \"form-control\"\n                            }\n                            name=\"userName\"\n                            value={this.state.userName}\n                            onChange={this.handleInputChange}\n                        />\n                        <div className={\n                            this.hasError(\"userName\") ? \"inline-errormsg\" : \"hidden\"\n                            }\n                        >\n                            User Name should be atleast 8 characters\n                        </div>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" className={\n                            this.hasError(\"email\")\n                                ? \"form-control is-invalid\"\n                                : \"form-control\"\n                            }\n                            name=\"email\"\n                            value={this.state.email}\n                            onChange={this.handleInputChange}\n                        />\n                        <div\n                            className={this.hasError(\"email\") ? \"inline-errormsg\" : \"hidden\"}\n                        >\n                            Email is invalid or missing\n                        </div>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" className={\n                            this.hasError(\"password\")\n                                ? \"form-control is-invalid\"\n                                : \"form-control\"\n                            }\n                            name=\"password\" \n                            value={this.state.password}\n                            onChange={this.handleInputChange}\n                        />\n                        <div\n                            className={this.hasError(\"password\") ? \"inline-errormsg\" : \"hidden\"}\n                        >\n                            Password should be atleast 6 characters\n                        </div>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formGroupConfirmPassword\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Confirm Password\" className={\n                            this.hasError(\"confirmPass\")\n                                ? \"form-control is-invalid\"\n                                : \"form-control\"\n                            }\n                            name=\"confirmPass\"\n                            value={this.state.confirmPass}\n                            onChange={this.handleInputChange}\n                        />\n                        <div\n                            className={this.hasError(\"confirmPass\") ? \"inline-errormsg\" : \"hidden\"}\n                        >\n                            Should match password\n                        </div>\n                    </Form.Group>\n                    <Form.Group className=\"d-grid\" >\n                    <Button variant=\"primary\" type=\"submit\"  onClick={this.handleSubmit}>\n                        REGISTER\n                    </Button>\n                    </Form.Group>\n                </Form>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}